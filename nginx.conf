worker_processes auto;
worker_rlimit_nofile 100000;

error_log /var/log/nginx/error.log warn;

events {
    worker_connections 10000;
    use epoll;
    multi_accept on;
}

http {
    root /usr/share/nginx/html;

    include /etc/nginx/mime.types;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    access_log off;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    aio threads;
    aio_write on;
    directio 1m;

    reset_timedout_connection on;
    keepalive_requests 100000;
    keepalive_timeout 15;
    send_timeout 10;
    client_body_timeout 12;
    client_header_timeout 12;

    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 8k;

    gzip on;
    gzip_min_length 10240;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 5;
    gzip_types text/plain text/css text/javascript text/xml application/json application/javascript application/x-javascript application/xml application/xml+rss image/svg+xml;

    server {
        listen *:80;

        location / {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            add_header Pragma no-cache;

            try_files $uri $uri/ /index.html?$args;
        }

#         exec /docker-entrypoint.sh: exec format error

        location = /health {
            return 200 "Status: OK, Version: 0.0.0";
        }

        location ~* (bundle|\/assets|\.js$|\.css$) {
            expires 1M;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
        }
    }
}
